#.................................................................................................................
# PA_CAL - Optional parameters: BED, EXTRUDER, PA_START, PA_STEP, NZL
# Usage: PA_CAL BED=100 EXTRUDER=240 PA_START=0.03 PA_STEP=0.002 NZL=0.4
#   It performs a quick and simple line pressure advance test. First prints a line with the currently
#   set PA, move 30mm and then prints 20 line segments, 5mm apart, starting with PA_START, increasing each
#   line by PA_STEP. If no parameters are specified, PA_CAL will use the following:
#   PA_CAL BED=[defaultTempBed] EXTRUDER=[defaultTempNozzle] PA_START=0.0 PA_STEP=0.005 NZL=(as per printer.cfg)
#.................................................................................................................
# Required variable(s) to be set. Add the following to your global variable dictionary block as:
#
#[gcode_macro globalvariables]
#variable_defaultTempBed: 110           # The default Bed temperature if none is specified
#variable_defaultTempNozzle: 240        # The default Nozzle Extruding temperature if none is specified
#variable_LimitAccel: 3501              # Accel velocity limit
#variable_LimitDecel: 1751              # Decel velocity limit
#gcode:
#.................................................................................................................
# Required external macro(s) used by this macro.
#
# PRINT_START
# PRINT_END
#.................................................................................................................

#.................................................................................................................    
[gcode_macro TUNE_PA_CAL]
description: Prints a Pressure Advance panel to help determine correct PA
gcode:
    {% if printer.idle_timeout.state == "Printing" or printer.pause_resume.is_paused %} ; Check if printing or paused
        {action_respond_info("Cannot do that while printing")}                          ; If so, respond with error
      {% else %}                                                                        ; If not, continue
	    {% set EXTRUDER = params.get('EXTRUDER', printer['gcode_macro globalvariables'].defaulttempnozzle)|float %}
        {% set BED = params.get('BED', printer["gcode_macro globalvariables"].defaulttempbed|float) %}
        {% set PA_START = params.get("PA_START", 0.0)|float %} ; Default to 0.0 if no parameter is passed
        {% set PA_STEP = params.get("PA_STEP", 0.005)|float %} ; Default to 0.005 if no parameter is passed
        {% set NZL = params.get('NZL', printer.configfile.config['extruder']['nozzle_diameter']|float) %}
        {% set E20 = (0.1147475 * NZL) * 20|float %}
        {% set E40 = (0.1147475 * NZL) * 40|float %}
        {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %}
        {% set Y_MID = printer.configfile.config["stepper_y"]["position_max"]|float / 2.0 %}
               
        PRINT_START BED_TEMP={BED} EXTRUDER_TEMP={EXTRUDER} SIZE={(X_MID-40)}_{(Y_MID-65)}_{(X_MID+40)}_{(Y_MID-35)+(5*20)} NONPRINT=TRUE ; Print start
        
        M220 S100                                          ; Reset speed
        M221 S100                                          ; Reset flow 
        G21                                                ; Millimeter units
        G90                                                ; Absolute XYZ
        M83                                                ; Relative E
        SET_VELOCITY_LIMIT ACCEL={printer["gcode_macro globalvariables"].limitaccel|float} ACCEL_TO_DECEL={printer["gcode_macro globalvariables"].limitdecel|float}
        G92 E0                                             ; Reset extruder
        M106 S0                                            ; Turn off fan
        G1 X{(X_MID-40)} Y{(Y_MID-65)} F30000              ; Move to start position
        G1 Z0.25 F300                                      ; Move to layer height
        G1 E0.75 F1800                                     ; Un-retract
        G1 X{(X_MID-20)} Y{(Y_MID-65)} E{E20} F300         ; Print line part one
        G1 X{(X_MID+20)} Y{(Y_MID-65)} E{E40} F9000        ; Print line part two
        G1 X{(X_MID+40)} Y{(Y_MID-65)} E{E20} F300         ; Print line part three
        G1 E-0.75 F1800                                    ; Retract
        G1 Z1 F300                                         ; Move above layer height  
        {% for i in range(0, 20) %}                        ; Loop 20 times
            SET_PRESSURE_ADVANCE ADVANCE={PA_START + (i * PA_STEP)}      ; Set Pressure Advance
            M117 Testing Pressure Advance at: {PA_START + (i * PA_STEP)} ; Display message
            G1 X{(X_MID-40)} Y{(Y_MID-35)+(5*i)} F30000                  ; Move to start position
            G1 Z0.25 F300                                                ; Move to layer height
            G1 E0.75 F1800                                               ; Un-retract
            G1 X{(X_MID-20)} Y{(Y_MID-35)+(5*i)} E{E20} F300             ; Print line part one
            G1 X{(X_MID+20)} Y{(Y_MID-35)+(5*i)} E{E40} F9000            ; Print line part two
            G1 X{(X_MID+40)} Y{(Y_MID-35)+(5*i)} E{E20} F300             ; Print line part three
            G1 E-0.75 F1800                                              ; Retract
            G1 Z1 F300                                                   ; Move above layer height  
        {% endfor %}                                                     ; End loop
        M117 Find best line and multiply it by ({PA_START} + (line * {PA_STEP}) ) to find your PA setting. ; Display message
        M118 Find best line and multiply it by ({PA_START} + (line * {PA_STEP}) ) to find your PA setting. ; Display message
        PRINT_END                                          ; End print
    {% endif %}	                                           ; End printing check