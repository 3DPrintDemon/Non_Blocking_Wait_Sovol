# A Very Modified version of https://github.com/VoronDesign/VoronUsers/tree/master/printer_mods/Ellis/Bed_Fans

[gcode_macro _BEDFANVARS]
variable_bedfanenclosuretarget: 999                                                                   ; Enclosure temp to switch to medium speed fans
variable_bedfantripon: 999                                                                            ; Lowest bed temperature target that will enable the bed fans
variable_bedfanreached: 0                                                                             ; Flag to indicate enclosure temp has reached target
variable_bedreached: 0                                                                                ; Flag to indicate bed temp has reached target
variable_bedfansenabled: 0                                                                            ; Flag to indicate fans are enabled
variable_previous_temperature: 25
variable_previous_speed: 0.2
variable_average_speed: 50
variable_counter: 1
gcode:
    M117 Happy printing.


[gcode_macro BEDFANSOFF]
gcode:
    SET_FAN_SPEED FAN=BedFan SPEED=0                                                                  ; Turn off bed fans
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfansenabled VALUE=0                              ; Set bed fans enabled flag to 0
    M118 Bed fans turned off.

[gcode_macro BEDFANSFAST]
gcode:
    {% set fan_max = printer["gcode_macro globalvariables"].bedfansmax|float %}                       ; Set bed fan max limit speed
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfansenabled VALUE=1                              ; Set bed fans enabled flag to 0
    SET_FAN_SPEED FAN=BedFan SPEED={fan_max} 
    M118 Bed fans set to maximum speed.

[gcode_macro BEDFANSSLOW]
gcode:
    {% set fan_min = printer["gcode_macro globalvariables"].bedfansmin|float %}                       ; Set bed fan min limit speed
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfansenabled VALUE=1                              ; Set bed fans enabled flag to 0
    SET_FAN_SPEED FAN=BedFan SPEED={fan_min} 
    M118 Bed fans set to minimum speed.

[gcode_macro BEDFANSON]
gcode:
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfansenabled VALUE=1                              ; Set bed fans enabled flag to 1
    M118 Bed fans enabled.

[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
    BEDFANSOFF                                                                                        ; Turn off bed fans
    _TURN_OFF_HEATERS                                                                                 ; Turn off heaters
    M118 Heaters have been turned off.



[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
    {% set HEATER = params.HEATER|default("None") %}                                                  ; Heater to set temperature for
    {% set TARGET = params.TARGET|default(0)|float %}                                                 ; Target temperature
    {% set bedfantripon = printer["gcode_macro _BEDFANVARS"].bedfantripon|float %}                    ; Bed temp threshold for bed fans 

    {% if HEATER|lower == "heater_bed" %}                                                             ; If heater is bed
        M99140 S{ TARGET }                                                                            ; Set bed temperature
    {% else %}                                                                                        ; If heater is not bed
        _SET_HEATER_TEMPERATURE {rawparams}                                                           ; Set heater temperature
    {% endif %}                                                                                       ; End if heater is bed

    {% if HEATER|lower == "heater_bed" %}                                                             ; If heater is bed
        {% if TARGET >= bedfantripon %}                                                               ; If the bed's target temp is above the bed fan trip threshold
            BEDFANSSLOW                                                                               ; Set bed fans to slow speed as bed is heating
        {% else %}                                                                                    ; If the bed's target temp is below the bed fan trip threshold
            BEDFANSOFF                                                                                ; Turn off bed fans
        {% endif %}                                                                                   ; End if the bed's target temp is above the bed fan trip threshold
    {% endif %}                                                                                       ; End if heater is bed



[gcode_macro M190]
rename_existing: M99190
gcode:
    {% set S = params.S|int %}                                                                        ; Bed target temperature
    {% set bedfantripon = printer["gcode_macro _BEDFANVARS"].bedfantripon|int %}                      ; Grab the bed fan trip threshold

    {% if S >= bedfantripon %}                                                                        ; If the bed target temp is above the bed fan trip threshold
        BEDFANSSLOW                                                                                   ; Set bed fans to low speed fans while the bed is heating
    {% else %}                                                                                        ; If the bed target temp is below the bed fan trip threshold
        BEDFANSOFF                                                                                    ; Turn off bed fans
    {% endif %}                                                                                       ; End if the bed target temp is above the bed fan trip threshold

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}                                   ; Set bed target temp
  
    {% if S != 0 %}                                                                                   ; If the bed target temp is not 0
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={ S|int } MAXIMUM={ S|int + 5 }                    ; Wait for bed temp within 5 degrees
    {% endif %}                                                                                       ; End if bed target temp is not 0



[gcode_macro M140]
rename_existing: M99140
gcode:
    {% set S = params.S|float %}                                                                      ; Bed target temperature
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}                                               ; Set bed target temp



[gcode_macro _BEDFANCHECK]
gcode:
     M118 Running bed fan check macro...
    {% set previous_speed = printer["gcode_macro _BEDFANVARS"].previous_speed|float %}
    {% set previous_temperature = printer["gcode_macro _BEDFANVARS"].previous_temperature|float %}
    {% set counter = printer["gcode_macro _BEDFANVARS"].counter|float %}
    {% set average_speed = printer["gcode_macro _BEDFANVARS"].average_speed|float %}
    {% set bedfantripon = printer["gcode_macro _BEDFANVARS"].bedfantripon|float %}
    {% set target_temperature = printer["gcode_macro _BEDFANVARS"].bedfanenclosuretarget|float %}
    {% set current_temperature = printer["temperature_sensor Chamber"].temperature|float %}
    {% set enclosuresoak = 15|float %}
    ;{% set enclosuresoak = printer["gcode_macro globalvariables"].enclosuresoakminutes|float|max(1) %}
    {% set bedfanreached = printer["gcode_macro _BEDFANVARS"].bedfanreached|float %}
    {% set bedreached = printer["gcode_macro _BEDFANVARS"].bedreached|float %}
    {% set bedfansenabled = printer["gcode_macro _BEDFANVARS"].bedfansenabled|float %}
    {% set bedtarget = printer.heater_bed.target|float %}
    {% set currentbedtemp = printer.heater_bed.temperature|float %}
    {% set fan_min = printer["gcode_macro globalvariables"].bedfansmin|float %}
    {% set fan_max = printer["gcode_macro globalvariables"].bedfansmax|float %}

    {% if bedfansenabled and bedtarget >= bedfantripon %}
        {% if currentbedtemp >= (bedtarget|float - 1) or bedreached == 1%}
            {% if currentbedtemp >= (bedtarget|float - 1) and bedreached == 0 %}
            M118 Bed has reached the target of {bedtarget}, starting bed fans.
            SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedreached VALUE=1
            {% endif %}


    #--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

     ; Drop from max
    {% if current_temperature < target_temperature and previous_speed == 100 %}
        {% set previous_speed = 20 %}  ; <------------------------------------------------------------------------------- This should be just a bit less of your normal maintaining fan speed ------- !
    {% endif %}

    {% if current_temperature < target_temperature or current_temperature <= previous_temperature %}   
        M118 Current_temperature < target_temperature, or current_temperature <= previous_temperature, increasing fan speed by 102%
        {% set fan_speed = previous_speed * 1.02 %}
    {% endif %}

    {% if current_temperature < (target_temperature * 0.90) %}
        M118 Current temperature {current_temperature} < 90% of target temperature {current_temperature}, overriding fan speed to 100%
        {% set fan_speed = 100 %}
    {% endif %}

    {% if current_temperature > (target_temperature * 0.99) %}
        M118 Current_temperature {current_temperature} >= 98% of target temperature {target_temperature * 0.99}, reducing previous fan speed by 5%
        {% set fan_speed = previous_speed * 0.95 %}
    {% endif %}

    {% if current_temperature > (target_temperature * 1.05) %}
        M118 Current_temperature {current_temperature} > 105% of target temperature {target_temperature * 105}, reducing previous fan speed by 10%
        {% set fan_speed = previous_speed * 0.90 %}
    {% endif %}

    ; Speed safety check
    {% if fan_speed < 1 %} {% set fan_speed = 1 %} {% endif %}
    {% if fan_speed > 100 %} {% set fan_speed = 100 %} {% endif %}
   
    ; Change fan percent to Klipper fan speed range
    {% set klipperspeed = ( (fan_speed / 100) * (fan_max - fan_min) ) + fan_min |float %} 

    ; Change fans to calculated Klipper speed
    SET_FAN_SPEED FAN=BedFan SPEED={klipperspeed}
    M118 Set fan % at {fan_speed} (Speed = {klipperspeed}) / previous was {previous_speed} at enclosure temperature of {current_temperature} / previous was {previous_temperature}

    ; Calculate rough fan_speed average and loop counter
    {% set average_speed = (average_speed + fan_speed) / 2 %}
    M118 Average (running) fan speed is {average_speed}, with {counter} data points.

    ; Update variables for the next iteration
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=previous_temperature VALUE={current_temperature}
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=previous_speed VALUE={fan_speed}
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=counter VALUE={counter + 1}
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=average_speed VALUE={average_speed}

    #--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


            {% if bedfanreached == 0 and current_temperature >= (target_temperature - 1) %}
                SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfanreached VALUE=1
                M118 Enclosure has reached target temperature of {target_temperature}, starting enclosure soak for {enclosuresoak} minutes.
                {% set duration = printer["gcode_macro _WAIT_Variable"].duration|float %}
                {% set count = (enclosuresoak * 60) / duration %} 
                SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=waiting VALUE=True
                SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=count VALUE={count}
                UPDATE_DELAYED_GCODE ID=WAIT_Delayed DURATION={duration} 
            {% endif %}
    
        {% else %}
            M118 Bed temp ({currentbedtemp}) has not yet reached bed target ({bedtarget}), staying slow speed ({fan_min}).
            SET_FAN_SPEED FAN=BedFan SPEED={fan_min}
        {% endif %}

    {% endif %}