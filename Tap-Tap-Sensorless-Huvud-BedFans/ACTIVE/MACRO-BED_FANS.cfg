# A Very Modified version of https://github.com/VoronDesign/VoronUsers/tree/master/printer_mods/Ellis/Bed_Fans

[gcode_macro _BEDFANVARS]
variable_bedfanenclosuretarget: 999                                                                   ; Enclosure temp to switch to medium speed fans
variable_bedfantripon: 999                                                                            ; Lowest bed temperature target that will enable the bed fans
variable_bedfanreached: 0                                                                             ; Flag to indicate enclosure temp has reached target
variable_bedreached: 0                                                                                ; Flag to indicate bed temp has reached target
variable_bedfansenabled: 1                                                                            ; Flag to indicate fans are enabled
variable_previous_temperature = 1
variable_previous_fan_speed = 0
gcode:
    M117 Happy printing.


[gcode_macro BEDFANSOFF]
gcode:
    SET_FAN_SPEED FAN=BedFan SPEED=0                                                                  ; Turn off bed fans
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfansenabled VALUE=0                              ; Set bed fans enabled flag to 0
    UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0                                                     ; Cancel bed fan loop if it's running

[gcode_macro BEDFANSFAST]
gcode:
    {% set bedfanmaxlimit = printer["gcode_macro globalvariables"].bedfansmax|float %}                ; Set bed fan max limit speed
    SET_FAN_SPEED FAN=BedFan SPEED={bedfanmaxlimit} 

[gcode_macro BEDFANSSLOW]
gcode:
    {% set bedfanminlimit = printer["gcode_macro globalvariables"].bedfansmin|float %}                ; Set bed fan min limit speed
    SET_FAN_SPEED FAN=BedFan SPEED={bedfanminlimit} 

[gcode_macro BEDFANSON]
gcode:
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfansenabled VALUE=1                              ; Set bed fans enabled flag to 1
    UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5                                                     ; Start bed fan loop

[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
    BEDFANSOFF                                                                                        ; Turn off bed fans
    _TURN_OFF_HEATERS                                                                                 ; Turn off heaters



[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
    {% set HEATER = params.HEATER|default("None") %}                                                  ; Heater to set temperature for
    {% set TARGET = params.TARGET|default(0)|int %}                                                   ; Target temperature
    {% set bedfantripon = printer["gcode_macro _BEDFANVARS"].bedfantripon|int %}                      ; Bed temp threshold for bed fans 

    {% if HEATER|lower == "heater_bed" %}                                                             ; If heater is bed
        M99140 S{ TARGET }                                                                            ; Set bed temperature
    {% else %}                                                                                        ; If heater is not bed
        _SET_HEATER_TEMPERATURE {rawparams}                                                           ; Set heater temperature
    {% endif %}                                                                                       ; End if heater is bed

    {% if HEATER|lower == "heater_bed" %}                                                             ; If heater is bed
        {% if TARGET >= bedfantripon %}                                                               ; If the bed's target temp is above the bed fan trip threshold
            BEDFANSSLOW                                                                               ; Set bed fans to slow speed as bed is heating
            UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1                                             ; Start bed fan loop
        {% else %}                                                                                    ; If the bed's target temp is below the bed fan trip threshold
            BEDFANSOFF                                                                                ; Turn off bed fans
            UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0                                             ; Cancel bed fan loop if it's running
        {% endif %}                                                                                   ; End if the bed's target temp is above the bed fan trip threshold
    {% endif %}                                                                                       ; End if heater is bed



[gcode_macro M190]
rename_existing: M99190
gcode:
    {% set S = params.S|int %}                                                                        ; Bed target temperature
    {% set bedfantripon = printer["gcode_macro _BEDFANVARS"].bedfantripon|int %}                      ; Grab the bed fan trip threshold

    {% if S >= bedfantripon %}                                                                        ; If the bed target temp is above the bed fan trip threshold
        BEDFANSSLOW                                                                                   ; Set bed fans to low speed fans while the bed is heating
    {% else %}                                                                                        ; If the bed target temp is below the bed fan trip threshold
        BEDFANSOFF                                                                                    ; Turn off bed fans
    {% endif %}                                                                                       ; End if the bed target temp is above the bed fan trip threshold

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}                                   ; Set bed target temp
  
    {% if S != 0 %}                                                                                   ; If the bed target temp is not 0
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={ S|int } MAXIMUM={ S|int + 5 }                    ; Wait for bed temp within 5 degrees
    {% endif %}                                                                                       ; End if bed target temp is not 0

    {% if S >= bedfantripon %}                                                                        ; Now that bed is at temperature, If the bed target temp is above the bed fan trip threshold
        BEDFANSFAST                                                                                   ; Set bed fans to fast speed
        UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1                                                 ; Start bed fan loop
    {% endif %}                                                                                       ; End if the bed target temp is above the bed fan trip threshold



[gcode_macro M140]
rename_existing: M99140
gcode:
    {% set S = params.S|float %}                                                                      ; Bed target temperature
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}                                               ; Set bed target temp



[delayed_gcode bedfanloop]
gcode:
    {% set bedfantripon = printer["gcode_macro _BEDFANVARS"].bedfantripon|int %}
    {% set target_temperature = printer["gcode_macro _BEDFANVARS"].bedfanenclosuretarget|int %}
    {% set current_temperature = printer["temperature_sensor enclosure"].temperature|int %}
    {% set previous_temperature = printer["gcode_macro _BEDFANVARS"].previous_temperature|int %}
    {% set previous_fan_speed = printer["gcode_macro _BEDFANVARS"].previous_fan_speed|int %}
    {% set enclosuresoak = printer["gcode_macro globalvariables"].enclosuresoakminutes|int|max(1) %}
    {% set bedfanreached = printer["gcode_macro _BEDFANVARS"].bedfanreached|int %}
    {% set bedreached = printer["gcode_macro _BEDFANVARS"].bedreached|int %}
    {% set bedfansenabled = printer["gcode_macro _BEDFANVARS"].bedfansenabled|int %}
    {% set bedtarget = printer.heater_bed.target|int %}
    {% set currentbedtemp = printer.heater_bed.temperature|int %}
    {% set fan_max = printer["gcode_macro globalvariables"].bedfansmax|float %}
    {% set fan_min = printer["gcode_macro globalvariables"].bedfansmin|float %}
    {% set max_fan_speed_change = 0.1 %}
    {% set temperature_stall_threshold = 0.1 %}
    {% set looprate = 2 %}

    {% if bedfansenabled and bedtarget >= bedfantripon %}
        {% if currentbedtemp >= (bedtarget|int - 1) or bedreached %}
            {% if currentbedtemp >= (bedtarget|int - 1) and not bedreached %}
            M118 Bed has reached target of {bedtarget}, starting bed fans.
            {% endif %}
            SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedreached VALUE=1

            {% if current_temperature < target_temperature %}
                {% set temperature_diff = target_temperature - current_temperature %}
                {% set previous_diff = target_temperature - previous_temperature %}
                {% if temperature_diff < previous_diff %}
                    {% set fan_speed = fan_max %}
                {% else %}
                    {% set fan_speed_change = ((temperature_diff) / (temperature_diff + 1)) * (fan_max - fan_min) %}
                    {% set fan_speed_change = min(fan_speed_change, max_fan_speed_change) %}
                    {% if temperature_diff < temperature_stall_threshold %}
                        {% set fan_speed_change = max(fan_speed_change, max_fan_speed_change) %}
                    {% endif %}
                    {% set fan_speed = previous_fan_speed + fan_speed_change %}
                    {% set fan_speed = max(fan_speed, previous_fan_speed) %}
                    {% set fan_speed = min(fan_speed, fan_max) %}
                {% endif %}
            {% else %}
                {% set fan_speed = fan_min %}
            {% endif %}

            SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=previous_temperature VALUE={current_temperature}
            SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=previous_fan_speed VALUE={fan_speed}

            # Ensure fan_speed does not violate min or max, prob not needed but just to be safe
            {% if fan_speed < fan_min_speed %}
                {% set fan_speed = fan_min_speed %}
            {% elif fan_speed > fan_max_speed %}
                {% set fan_speed = fan_max_speed %}
            {% endif %}

            SET_FAN_SPEED SPEED={fan_speed}

            {% if not bedfanreached and current_temperature == (target_temperature - 1) %}
                SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfanreached VALUE=1
                M118 Enclosure has reached target temperature of {target_temperature}, starting enclosure soak for {enclosuresoak} minutes.
                {% set duration = printer["gcode_macro _WAIT_Variable"].duration|int %}
                {% set count = (enclosuresoak * 60) / duration %} 
                SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=waiting VALUE=True
                SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=count VALUE={count}
                UPDATE_DELAYED_GCODE ID=WAIT_Delayed DURATION={duration} 
            {% endif %}

        {% else %}
            SET_FAN_SPEED FAN=BedFan SPEED={bedfanminlimit}
        {% endif %}
    UPDATE_DELAYED_GCODE ID=bedfanloop DURATION={looprate}
    {% endif %}