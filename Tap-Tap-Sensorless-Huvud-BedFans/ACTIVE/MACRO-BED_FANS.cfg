# A Very Modified version of https://github.com/VoronDesign/VoronUsers/tree/master/printer_mods/Ellis/Bed_Fans


[gcode_macro _BEDFANVARS]
variable_bedfantripon: 90                                                                             ; Lowest bed temperature target that will enable the bed fans
variable_bedfansenabled: 0                                                                            ; Flag to indicate fans are enabled
variable_bedfanchambertarget: 50
variable_bedfanmin: 0.20
variable_bedfanmax: 0.60
variable_bedfannormal: 0.21                                                                           ; <--- This should be just below where your bed fan give stable temp
variable_bedreached: 0

gcode:
    M117 Happy printing.


[gcode_macro BEDFANSOFF]
gcode:
    SET_FAN_SPEED FAN=BedFan SPEED=0                                                                  ; Turn off bed fans
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfansenabled VALUE=0                              ; Set bed fans enabled flag to 0
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedreached VALUE=0                                  ; Set bed reached target flag to 0
    M118 Bed fans turned off.

[gcode_macro BEDFANSFAST]
gcode:
    {% set fan_max = printer["gcode_macro _BEDFANVARS"].bedfanmax|float %}                            ; Set bed fan max limit speed
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfansenabled VALUE=1                              ; Set bed fans enabled flag to 1
    SET_FAN_SPEED FAN=BedFan SPEED={fan_max} 
    M118 Bed fans set to maximum speed.

[gcode_macro BEDFANSNORMAL]
gcode:
    {% set fan_normal = printer["gcode_macro _BEDFANVARS"].bedfannormal|float %}                      ; Set bed fan normal speed
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfansenabled VALUE=1                              ; Set bed fans enabled flag to 1
    SET_FAN_SPEED FAN=BedFan SPEED={fan_normal} 
    M118 Bed fans set to maximum speed.

[gcode_macro BEDFANSSLOW]
gcode:
    {% set fan_min = printer["gcode_macro _BEDFANVARS"].bedfanmin|float %}                            ; Set bed fan min limit speed
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfansenabled VALUE=1                              ; Set bed fans enabled flag to 1
    SET_FAN_SPEED FAN=BedFan SPEED={fan_min} 
    M118 Bed fans set to minimum speed.

[gcode_macro BEDFANSON]
gcode:
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfansenabled VALUE=1                              ; Set bed fans enabled flag to 1
    UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1                                                     ; Start delayed-gcode chamber monitoring macro
    M118 Bed fans enabled.

[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
    BEDFANSOFF                                                                                        ; Turn off bed fans
    _TURN_OFF_HEATERS                                                                                 ; Turn off heaters
    M118 Heaters have been turned off.



[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
    {% set HEATER = params.HEATER|default("None") %}                                                  ; Heater to set temperature for
    {% set TARGET = params.TARGET|default(0)|float %}                                                 ; Target temperature
    {% set bedfantripon = printer["gcode_macro _BEDFANVARS"].bedfantripon|float %}                    ; Bed temp threshold for bed fans 

    {% if HEATER|lower == "heater_bed" %}                                                             ; If heater is bed
        M99140 S{ TARGET }                                                                            ; Set bed temperature
    {% else %}                                                                                        ; If heater is not bed
        _SET_HEATER_TEMPERATURE {rawparams}                                                           ; Set heater temperature
    {% endif %}                                                                                       ; End if heater is bed

    {% if HEATER|lower == "heater_bed" %}                                                             ; If heater is bed
        {% if TARGET >= bedfantripon %}                                                               ; If the bed's target temp is above the bed fan trip threshold
            BEDFANSSLOW                                                                               ; Set bed fans to slow speed as bed is heating
            UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1                                             ; Start delayed-gcode chamber monitoring macro
        {% else %}                                                                                    ; If the bed's target temp is below the bed fan trip threshold
            BEDFANSOFF                                                                                ; Turn off bed fans
        {% endif %}                                                                                   ; End if the bed's target temp is above the bed fan trip threshold
    {% endif %}                                                                                       ; End if heater is bed



[gcode_macro M190]
rename_existing: M99190
gcode:
    {% set S = params.S|int %}                                                                        ; Bed target temperature
    {% set bedfantripon = printer["gcode_macro _BEDFANVARS"].bedfantripon|int %}                      ; Grab the bed fan trip threshold

    {% if S >= bedfantripon %}                                                                        ; If the bed target temp is above the bed fan trip threshold
        BEDFANSSLOW                                                                                   ; Set bed fans to low speed fans while the bed is heating
    {% else %}                                                                                        ; If the bed target temp is below the bed fan trip threshold
        BEDFANSOFF                                                                                    ; Turn off bed fans
    {% endif %}                                                                                       ; End if the bed target temp is above the bed fan trip threshold

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}                                   ; Set bed target temp
  
    {% if S != 0 %}                                                                                   ; If the bed target temp is not 0
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={ S|int } MAXIMUM={ S|int + 5 }                    ; Wait for bed temp within 5 degrees
    {% endif %}                                                                                       ; End if bed target temp is not 0

    # Post-heating fan speeds
    {% if S >= bedfantripon %}
        BEDFANSFAST						    
        _CHAMBER_HEAT_WAIT
    {% endif %}



[gcode_macro _CHAMBER_HEAT_WAIT]
description: Chamber heating cycle waiting routine
gcode:
        STATUS_HEATING                                                                   ; Set status to heating
        SET_NOZZLE_LEDS_ON                                                               ; Turn on nozzle LEDs
        {% for i in range(0, 60) %}                                                      ; Loop for each 0.25 minutes, 60 = 15 minutes
            _WAIT_CHECK                                                                  ; Perfrom wait-check to keep values fresh
        {% endfor %}                                                                     ; End minute loop
        STATUS_READY                                                                     ; Set status to ready
    BEDFANSNORMAL                                                                        ; Set bedfans to normal speed
    M117 Chamber currently at {printer["temperature_sensor Chamber"].temperature}C       ; Display message
    M118 Bedfan speed set to normal, starting bedfan control loop.
    UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1                                        ; Start delayed-gcode chamber monitoring macro

[gcode_macro _WAIT_CHECK]
gcode:
    M117 Heating Chamber, please wait. {(printer["gcode_macro _BEDFANVARS"].bedfanchambertarget * 0.98)}/{printer["temperature_sensor Chamber"].temperature} ; Display message
    {% if printer["temperature_sensor Chamber"].temperature <  (printer["gcode_macro _BEDFANVARS"].bedfanchambertarget * 0.98) %} ; Check if Chamber is at least 98% of Target
        {% for s in range(0, 15) %}                                              ; Loop for each second
            G4 P1000                                                             ; Wait 1 second
        {% endfor %}                                                             ; End second loop
    {% else %}
        M117 Chamber at target temperature, quitting wait cycle.    
    {% endif %}



[gcode_macro M140]
rename_existing: M99140
gcode:
    {% set S = params.S|float %}                                                                      ; Bed target temperature
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}                                               ; Set bed target temp



[delayed_gcode bedfanloop]
gcode:
    {% if printer["gcode_macro _BEDFANVARS"].bedfansenabled == 1 %}	

        {% if printer.heater_bed.target >= printer["gcode_macro _BEDFANVARS"].bedfantripon %}	

            {% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 2) and printer["gcode_macro _BEDFANVARS"].bedreached == 0 %}
                SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedreached VALUE=1
            {% endif %}

            {% if printer["gcode_macro _BEDFANVARS"].bedreached == 1 %}

                {% set previous_speed = printer['fan_generic BedFan'].speed %}

                {% set fan_speed = printer['fan_generic BedFan'].speed %}

                {% if printer["temperature_sensor Chamber"].temperature < printer["gcode_macro _BEDFANVARS"].bedfanchambertarget and previous_speed == printer["gcode_macro _BEDFANVARS"].bedfanmax %}
                    {% set previous_speed = printer["gcode_macro _BEDFANVARS"].bedfannormal %}
                {% endif %}

                {% if printer["temperature_sensor Chamber"].temperature < printer["gcode_macro _BEDFANVARS"].bedfanchambertarget %}  {% set fan_speed = previous_speed * 1.05 %}  {% endif %}

                {% if printer["temperature_sensor Chamber"].temperature < (printer["gcode_macro _BEDFANVARS"].bedfanchambertarget * 0.90) %}  {% set fan_speed = printer["gcode_macro _BEDFANVARS"].bedfanmax %}  {% endif %}

                {% if printer["temperature_sensor Chamber"].temperature > (printer["gcode_macro _BEDFANVARS"].bedfanchambertarget * 1.0) %}  {% set fan_speed = previous_speed * 0.95 %}  {% endif %}

                {% if printer["temperature_sensor Chamber"].temperature > (printer["gcode_macro _BEDFANVARS"].bedfanchambertarget * 1.05) %}  {% set fan_speed = previous_speed * 0.90 %}  {% endif %}

                {% if printer["temperature_sensor Chamber"].temperature > (printer["gcode_macro _BEDFANVARS"].bedfanchambertarget * 1.10) %}  {% set fan_speed = 0.1 %}  {% endif %}

                ; Ensure bed fan speeds are within min/max and set speed
                SET_FAN_SPEED FAN=BedFan SPEED={[([printer["gcode_macro _BEDFANVARS"].bedfanmax|float, fan_speed]|min),0.1]|max}
                M118 Set bed fans to {[([printer["gcode_macro _BEDFANVARS"].bedfanmax|float, fan_speed]|min),0.1]|max}.


            {% endif %}

        {% endif %}

        UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=10

    {% else %}

        UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0

    {% endif %}
