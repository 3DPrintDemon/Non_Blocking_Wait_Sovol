# Modified version of https://github.com/VoronDesign/VoronUsers/tree/master/printer_mods/Ellis/Bed_Fans

[gcode_macro _BEDFANVARS]
variable_bedfanenclosuretarget: 999                                                                   ; Enclosure temp to switch to medium speed fans
variable_bedfantripon: 999                                                                            ; Lowest bed temperature target that will enable the bed fans
variable_bedfanenclosurereachedtemp: 0                                                                ; Flag to indicate enclosure temp has reached target
variable_bedfansenabled: 1                                                                            ; Flag to indicate fans are enabled


[gcode_macro BEDFANSSLOW]
gcode:
    SET_FAN_SPEED FAN=BedInner SPEED={ printer["gcode_macro globalvariables"].fansinnerslow|float }   ; Set inner bed fans to slow speed
    SET_FAN_SPEED FAN=BedOuter SPEED={ printer["gcode_macro globalvariables"].fansouterslow|float }   ; Set outer bed fans to slow speed

[gcode_macro BEDFANSMEDIUM]
gcode:
    SET_FAN_SPEED FAN=BedInner SPEED={ printer["gcode_macro globalvariables"].fansinnermedium|float } ; Set inner bed fans to medium speed
    SET_FAN_SPEED FAN=BedOuter SPEED={ printer["gcode_macro globalvariables"].fansoutermedium|float } ; Set outer bed fans to medium speed

[gcode_macro BEDFANSFAST]
gcode:
    SET_FAN_SPEED FAN=BedInner SPEED={ printer["gcode_macro globalvariables"].fansinnerfast|float }   ; Set inner bed fans to fast speed
    SET_FAN_SPEED FAN=BedOuter SPEED={ printer["gcode_macro globalvariables"].fansouterfast|float }   ; Set outer bed fans to fast speed

[gcode_macro BEDFANSOFF]
gcode:
    SET_FAN_SPEED FAN=BedInner SPEED=0                                                                ; Turn off inner bed fans
    SET_FAN_SPEED FAN=BedOuter SPEED=0                                                                ; Turn off outer bed fans
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfansenabled VALUE=0                              ; Set bed fans enabled flag to 0
    UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0                                                     ; Cancel bed fan loop if it's running

[gcode_macro BEDFANSON]
gcode:
    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfansenabled VALUE=1                              ; Set bed fans enabled flag to 1
    UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5                                                     ; Start bed fan loop

[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
    BEDFANSOFF                                                                                        ; Turn off bed fans
    _TURN_OFF_HEATERS                                                                                 ; Turn off heaters



[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
    {% set HEATER = params.HEATER|default("None") %}                                                  ; Heater to set temperature for
    {% set TARGET = params.TARGET|default(0)|int %}                                                   ; Target temperature
    {% set bedfantripon = printer["gcode_macro _BEDFANVARS"].bedfantripon|int %}                      ; Bed temp threshold for bed fans 

    {% if HEATER|lower == "heater_bed" %}                                                             ; If heater is bed
        M99140 S{ TARGET }                                                                            ; Set bed temperature
    {% else %}                                                                                        ; If heater is not bed
        _SET_HEATER_TEMPERATURE {rawparams}                                                           ; Set heater temperature
    {% endif %}                                                                                       ; End if heater is bed

    {% if HEATER|lower == "heater_bed" %}                                                             ; If heater is bed
        {% if TARGET >= bedfantripon %}                                                               ; If the bed's target temp is above the bed fan trip threshold
            BEDFANSSLOW                                                                               ; Set bed fans to slow speed as bed is heating
            UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1                                             ; Start bed fan loop
        {% else %}                                                                                    ; If the bed's target temp is below the bed fan trip threshold
            BEDFANSOFF                                                                                ; Turn off bed fans
            UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0                                             ; Cancel bed fan loop if it's running
        {% endif %}                                                                                   ; End if the bed's target temp is above the bed fan trip threshold
    {% endif %}                                                                                       ; End if heater is bed



[gcode_macro M190]
rename_existing: M99190
gcode:
    {% set S = params.S|int %}                                                                        ; Bed target temperature
    {% set bedfantripon = printer["gcode_macro _BEDFANVARS"].bedfantripon|int %}                      ; Grab the bed fan trip threshold

    {% if S >= bedfantripon %}                                                                        ; If the bed target temp is above the bed fan trip threshold
        BEDFANSSLOW                                                                                   ; Set bed fans to low speed fans while the bed is heating
    {% else %}                                                                                        ; If the bed target temp is below the bed fan trip threshold
        BEDFANSOFF                                                                                    ; Turn off bed fans
    {% endif %}                                                                                       ; End if the bed target temp is above the bed fan trip threshold

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}                                   ; Set bed target temp
  
    {% if S != 0 %}                                                                                   ; If the bed target temp is not 0
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={ S|int } MAXIMUM={ S|int + 5 }                    ; Wait for bed temp within 5 degrees
    {% endif %}                                                                                       ; End if bed target temp is not 0

    {% if S >= bedfantripon %}                                                                        ; Now that bed is at temperature, If the bed target temp is above the bed fan trip threshold
        BEDFANSFAST                                                                                   ; Set bed fans to fast speed
        UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1                                                 ; Start bed fan loop
    {% endif %}                                                                                       ; End if the bed target temp is above the bed fan trip threshold



[gcode_macro M140]
rename_existing: M99140
gcode:
    {% set S = params.S|float %}                                                                      ; Bed target temperature
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}                                               ; Set bed target temp



[delayed_gcode bedfanloop]
gcode:
    {% set bedfantripon = printer["gcode_macro _BEDFANVARS"].bedfantripon|int %}                       ; Grab the bed fan trip threshold
    {% set bedfanenclosuretarget = printer["gcode_macro _BEDFANVARS"].bedfanenclosuretarget|int %}     ; Get the enclosure target temp
    {% set enclosuretemp = printer["temperature_sensor enclosure"].temperature|int %}                  ; Get the enclosure temp
    {% set enclosuresoak = printer["gcode_macro globalvariables"].enclosuresoakminutes|int|max(1) %}   ; Get the enclosure soak minutes, minumum 1 minute
    {% set enclosurereachedtemp = printer["gcode_macro _BEDFANVARS"].bedfanenclosurereachedtemp|int %} ; Get the enclosure reached temperature flag
    {% set bedfansenabled = printer["gcode_macro _BEDFANVARS"].bedfansenabled|int %}                   ; Get the enclosure enabled flag
    {% set bedtarget = printer.heater_bed.target|int %}                                                ; Get the heater_bed target
    {% set currentbedtemp = printer.heater_bed.temperature|int %}                                      ; Get the current bed temp

    {% if bedfansenabled and bedtarget >= bedfantripon %}                                              ; If the bed target temp is above the bed fan trip threshold and fans are enabled
        {% if currentbedtemp >= (bedtarget|int - 1) %}                                                 ; If the bed temp is within 1 degree of the target temperature
            {% if enclosuretemp < bedfanenclosuretarget %}                                             ; If the enclosure temp is below the enclosure target temp
                BEDFANSFAST                                                                            ; Set bed fans to fast speed
            {% else %}                                                                                 ; If the enclosure temp is above the enclosure target temp
                BEDFANSMEDIUM                                                                          ; Set bed fans to medium speed
                {% if not enclosurereachedtemp %}                                                      ; If the enclosure reached temperature flag is 0
                    SET_GCODE_VARIABLE MACRO=_BEDFANVARS VARIABLE=bedfanenclosurereachedtemp VALUE=1   ; Set the enclosure reached temperature flag to 1
                    {% set duration = printer["gcode_macro _WAIT_Variable"].duration|int %}            ; Get duration from variable
                    {% set count = (enclosuresoak * 60) / duration %}                                  ; Calculate count
                    SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=waiting VALUE=True                ; Set waiting to True
                    SET_GCODE_VARIABLE MACRO=_WAIT_Variable VARIABLE=count VALUE={count}               ; Set count
                    UPDATE_DELAYED_GCODE ID=WAIT_Delayed DURATION={duration}                           ; Since enclosure target temp has been reached, begin enclosure soak cycle
                {% endif %}                                                                            ; End if the enclosure reached temperature flag is 0
            {% endif %}                                                                                ; End if the enclosure temp is below the enclosure target temp
        {% else %}                                                                                     ; If the bed temp is not within 1 degree of the target temperature
            BEDFANSSLOW                                                                                ; Set bed fans to slow speed
        {% endif %}                                                                                    ; End if the bed temp is within 1 degree of the target temperature
    UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5                                                      ; Restart bed fan loop
    {% endif %}                                                                                        ; End if the bed target temp is above the bed fan trip threshold