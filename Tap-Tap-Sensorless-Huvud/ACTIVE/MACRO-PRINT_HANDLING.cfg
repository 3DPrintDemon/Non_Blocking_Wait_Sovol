#.................................................................................................................
[gcode_macro _PRINT_VARIABLES]
variable_extruder_temp: 235
variable_extruder_warm: 160
gcode:
    M117 Happy Printing



#.................................................................................................................
[gcode_macro PRINT_START]
description: Performs all needed moves prior to printing
gcode:
    CLEAR_PAUSE                                            ; Clear pause state from previous print
    BED_MESH_CLEAR                                         ; Clear bed mesh data from previous print
    M220 S100                                              ; Reset feedrate to 100%
    M221 S100                                              ; Reset flowrate to 100%
	
    # Bring in variables passed by the slicer. If needed variables are not passed then PRINT_START will use default values set in the printer.cfg file. 

    # SuperSlicer 'Start G-Code' example follows:
    # M104 S0 ; Stops PS/SS from sending temp waits separately
    # M140 S0
    # PRINT_START BED_TEMP=[first_layer_bed_temperature] EXTRUDER_TEMP=[first_layer_temperature] ENCLOSURE_TEMP=[chamber_temperature] SOAK=15 PA=0.045 ST=0.21 SIZE={first_layer_print_min[0]}_{first_layer_print_min[1]}_{first_layer_print_max[0]}_{first_layer_print_max[1]}

    # PrusaSlicer 'Start G-Code' example follows (have to hard-write enclosure temp):
    # M104 S0 ; Stops PS/SS from sending temp waits separately
    # M140 S0
    # PRINT_START BED_TEMP=[first_layer_bed_temperature] EXTRUDER_TEMP=[first_layer_temperature] ENCLOSURE_TEMP=50 SOAK=15 PA=0.045 ST=0.21 SIZE={first_layer_print_min[0]}_{first_layer_print_min[1]}_{first_layer_print_max[0]}_{first_layer_print_max[1]}
    
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}                                                               ; Get mesh parameters from slicer
    COMPUTE_MESH_PARAMETERS SIZE={FL_SIZE}                                                                                  ; Compute mesh parameters
    {% set PA = params.PA|default(printer.configfile.config['extruder']['pressure_advance']|float) %}                       ; Set pressure advance
    {% set ST = params.ST|default(printer.configfile.config['extruder']['pressure_advance_smooth_time']|float) %}           ; Set pressure advance
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(printer['gcode_macro globalvariables'].defaulttempnozzle)|float %}  ; Set extruder temperature
    {% set EXTRUDER_WARM = params.EXTRUDER_WARM|default(printer["gcode_macro globalvariables"].defaultwarmnozzle)|float %}  ; Set extruder warm temperature
    {% set SOAK = params.SOAK|default(printer["gcode_macro globalvariables"].preprintsoakminutes|float) %}                  ; Set pre-print soak time
    {% set BED_TEMP = (params.BED_TEMP|default(printer["gcode_macro globalvariables"].defaulttempbed)|float) %}             ; Set bed temperature
    {% set ENCLOSURE_TEMP = params.ENCLOSURE_TEMP|default(printer["gcode_macro globalvariables"].defaultenclosure|float) %} ; Set enclosure temperature
    SET_PRESSURE_ADVANCE ADVANCE={PA} SMOOTH_TIME={ST}                                                                      ; Set pressure advance
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=extruder_temp VALUE={EXTRUDER_TEMP}                                  ; Set extruder temperature
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=extruder_warm VALUE={EXTRUDER_WARM}                                  ; Set extruder warm temperature

    M118 {rawparams}                                       ; Display all passed parameters
    M118 gCode file passed the following to PRINT_START:   ; Display message on LCD screen
    M140 S{BED_TEMP}                                       ; Set bed temperature
    M104 S{EXTRUDER_WARM}                                  ; Set extruder temperature
    G90                                                    ; Absolute positioning
    G21                                                    ; Millimeters
    M83                                                    ; Extruder relative mode
    G92 E0.0                                               ; Reset the extruder position
    SET_GCODE_OFFSET Z=0.0                                 ; Reset the G-Code Z offset
    M117 Performing initial homing.                        ; Display message on LCD screen
    BED_MESH_CLEAR                                         ; Clear bed mesh data from previous print
    G28                                                    ; Home all axes
    M117 Warming nozzle for QGL.                           ; Display message on LCD screen
    M109 S{EXTRUDER_WARM}                                  ; Wait for extruder to reach temperature
    M117 Performing warm G28 Z.                            ; Display message on LCD screen
    G28 Z                                                  ; Home Z axis
    M117 Performing initial QGL.                           ; Display message on LCD screen
    QUAD_GANTRY_LEVEL                                      ; Perform QGL
    G28 Z                                                  ; Home Z axis
    PARK_Center                                            ; Park nozzle at center of bed
    M117 Bringing bed to temperature.                      ; Display message on LCD screen
    STATUS_HEATING                                         ; Set status to heating
    SET_NOZZLE_LEDS_ON                                     ; Turn on nozzle LEDs
    M190 S{BED_TEMP}                                       ; Wait for bed to reach temperature
    M117 Bringing enclosure to temperature.                ; Display message on LCD screen
    M141 S{ENCLOSURE_TEMP}                                 ; Set enclosure temperature
    
    {% if params.NONPRINT %}                               ; If NONPRINT is passed then need to use blocking wait routine
        _HEAT_WAIT MINUTES={SOAK}                          ; Wait for SOAK minutes
        _PRINT_START2                                      ; Start sudo print
      {% else %}                                           ; If NONPRINT is not passed then continue and use non-blocking wait routine
        _WAIT_Start MINUTES={SOAK}                         ; Wait for SOAK minutes
    {% endif %}                                            ; End if statement


#.................................................................................................................
[gcode_macro _PRINT_START2]
description: Part 2 - Performs all needed moves prior to printing
gcode:
    RESUME_BASE                                            ; Resume print
    {% set EXTRUDER_TEMP = printer["gcode_macro _PRINT_VARIABLES"].extruder_temp|int %} ; Get extruder temperature
    CURRENT_HIGH                                           ; Set current to high
    M117 Performing hot level.                             ; Display message on LCD screen
    M400                                                   ; Wait for moves to complete
    G3201                                                  ; Perform hot level and mesh
    M104 S{EXTRUDER_TEMP}                                  ; Set extruder temperature
    M117 Moving nozzle to purgle line start position.      ; Display message on LCD screen
    G1 X0 Y20 F4000                                        ; Move nozzle to side
    G1 Z1.5                                                ; Move nozzle to over bed
    STATUS_HEATING                                         ; Set status to heating
    SET_NOZZLE_LEDS_ON                                     ; Turn on nozzle LEDs
    M117 Bringing nozzle to temperature.                   ; Display message on LCD screen
    M118 Bringing nozzle to temperature.                   ; Display message on LCD screen
    M109 S{EXTRUDER_TEMP}                                  ; Wait for extruder to reach temperature
    _FILAMENT_READY                                        ; Perform filament purgeline and readies for print
    M117 Printing.                                         ; Display message on LCD screen
    M118 Printing.                                         ; Display message on LCD screen
    STATUS_PRINTING                                        ; Set status to printing
    SET_NOZZLE_LEDS_ON                                     ; Turn on nozzle LEDs


#.................................................................................................................	
[gcode_macro _FILAMENT_READY]
description: Performs filament specific purgeline and readies for print
gcode:
    STATUS_BUSY                                            ; Set status to busy
    SET_NOZZLE_LEDS_ON                                     ; Turn on nozzle LEDs
    SET_VELOCITY_LIMIT ACCEL={printer["gcode_macro globalvariables"].limitaccel|float} ACCEL_TO_DECEL={printer["gcode_macro globalvariables"].limitdecel|float} ; Set velocity limits
    {% set NZLD = printer.configfile.config["extruder"]["nozzle_diameter"]|float %}                                                                             ; Get nozzle diameter from config
    {% set purgeRetract = printer["gcode_macro globalvariables"].purgeretract|float %}                                                                          ; Get retraction for purge line from config
    {% set X_MeshCenter, Y_MeshCenter = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].mesh_center.split(',')|map('trim')|map('int') %}                        ; Get mesh center

    M117 Purging nozzle.                                   ; Display message on LCD screen
    G1 X0 Y19.8 Z3 F300.0                                  ; Move nozzle
    M400                                                   ; Wait for moves to complete
    G1 X130 Y0.0 Z0.3 F3000.0                              ; Move nozzle to start position
    G1 X010 Y0.0 Z0.3 F1500.0 E{(37.5 * NZLD)}             ; Extrude filament
    G1 X010 Y0.3 Z0.3 F5000.0                              ; Move nozzle
    G1 X130 Y0.3 Z0.3 F1500.0 E{(75.0 * NZLD)}             ; Extrude filament
    M400                                                   ; Wait for moves to complete
    G92 E0                                                 ; Reset extruder position
    G1 E-{purgeRetract} F3000                              ; Retract filament
    G1 Z3 F3000                                            ; Move nozzle up
    G1 X{X_MeshCenter} Y{Y_MeshCenter} F4000               ; Move nozzle to center of mesh



#.................................................................................................................
[gcode_macro PRINT_END]
description: Performs all needed actions upon completion of printing
gcode:
    {% set EndRetract = printer["gcode_macro globalvariables"].endretract|float %}                                                              ; Get end of print retraction distance
    {% set EXTRUDER_WARM = printer["gcode_macro _PRINT_VARIABLES"].extruder_warm|int %}                                                         ; Get warm nozzle temperature
    SET_VELOCITY_LIMIT ACCEL={printer["gcode_macro globalvariables"].nplimitaccel|float} ACCEL_TO_DECEL={printer["gcode_macro globalvariables"].nplimitdecel|float} ; Set velocity limits
    SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=mesh_center VALUE='"0,0"'                                                        ; Reset mesh center
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=extruder_temp VALUE={printer["gcode_macro globalvariables"].defaulttempnozzle|float}     ; Reset extruder temperature
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=extruder_warm VALUE={printer["gcode_macro globalvariables"].defaultwarmnozzle|float}     ; Reset warm nozzle temperature

    G91                                                    ; Relative positioning
    G0 Z5 F1000                                            ; Raise Z by 5mm
    G90                                                    ; Absolute positioning
    M220 S100                                              ; Reset speed to 100%
    M221 S100                                              ; Reset flow to 100%
    G92 E0                                                 ; Reset the extruder position
    G1 E-{EndRetract} F3600                                ; Retract filament
    M400                                                   ; Wait for moves to complete
    SAVE_GCODE_STATE NAME=STATE_PRINT_END                  ; Save current state   
    M400                                                   ; Wait for moves to complete
    TURN_OFF_HEATERS                                       ; Turn off heaters
    CURRENT_NORMAL                                         ; Set current to normal
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintcool|float} NZL_TEMP={EXTRUDER_WARM} ; Wait for cool minutes
    PARK_UpperRight                                        ; Park nozzle at upper right of bed
    M18 X Y E                                              ; Disable all steppers
    BED_MESH_CLEAR                                         ; Clear bed mesh data from previous print
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END               ; Restore saved state
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintparkcool|float} NZL_TEMP=80 ; Wait for cool minutes until NZL 80c

    STOP_LED_EFFECTS                                       ; Turn off LED effects
    SET_LED LED=sb_leds RED=.3 GREEN=.5 BLUE=.4            ; Set LED to green
    M117 Finished printing, check nozzle clear.            ; Display message on LCD screen
    M118 Finished printing, check nozzle clear.            ; Display message on terminal



#.................................................................................................................
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% set EndRetract = printer["gcode_macro globalvariables"].endretract|float %}                                                              ; Get end of print retraction distance
    SET_VELOCITY_LIMIT ACCEL={printer["gcode_macro globalvariables"].nplimitaccel|float} ACCEL_TO_DECEL={printer["gcode_macro globalvariables"].nplimitdecel|float} ; Set velocity limits
    SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=mesh_center VALUE='"0,0"'                                                        ; Reset mesh center
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=extruder_temp VALUE={printer["gcode_macro globalvariables"].defaulttempnozzle|float}     ; Reset extruder temperature
    SET_GCODE_VARIABLE MACRO=_PRINT_VARIABLES VARIABLE=extruder_warm VALUE={printer["gcode_macro globalvariables"].defaultwarmnozzle|float}     ; Reset warm nozzle temperature
    SAVE_GCODE_STATE NAME=STATE_PRINT_END                  ; Save current state
    M400                                                   ; Wait for moves to complete
    M220 S100                                              ; Reset speed to 100%
    M221 S100                                              ; Reset flow to 100%
    G92 E0                                                 ; Reset the extruder position
    G1 E-{EndRetract} F3600                                ; Retract filament
    CLEAR_PAUSE                                            ; Clear pause state
    TURN_OFF_HEATERS                                       ; Turn off heaters
    CANCEL_PRINT_BASE                                      ; Call original macro
    CURRENT_NORMAL                                         ; Set current to normal
    M106 S250                                              ; Turn on fan
    G90                                                    ; Absolute positioning
    PARK_UpperRight                                        ; Park nozzle at upper right of bed
    M18 X Y E                                              ; Disable all steppers
    BED_MESH_CLEAR                                         ; Clear bed mesh data from previous print
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END               ; Restore saved state
    _COOL_WAIT MINUTES={printer["gcode_macro globalvariables"].postprintparkcool|float} NZL_TEMP=80 ; Wait for cool minutes until NZL 80c

    M117 Cancelled print, check nozzle clear.              ; Display message on LCD screen
    M118 Cancelled print, check nozzle clear.              ; Display message on terminal
    STATUS_READY                                           ; Set status to ready



#.................................................................................................................
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    {% set X_MID = printer.configfile.config["stepper_x"]["position_max"]|float / 2.0 %} ; Get X mid point
    {% set x = params.X|default(X_MID) %}                   ; X position to move to
    {% set y = params.Y|default(20) %}                      ; Y position to move to
    {% set z = params.Z|default(10)|float %}                ; Z position to move to
    {% set e = params.E|default(1) %}                       ; E position to move to
    {% set max_z = printer.toolhead.axis_maximum.z|float %} ; Maximum Z position
    {% set act_z = printer.toolhead.position.z|float %}     ; Actual Z position
    {% set lift_z = z|abs %}                                ; Z lift distance
    {% if act_z < (max_z - lift_z) %}                       ; Check if Z is high enough
        {% set z_safe = lift_z %}                           ; Set Z lift distance
      {% else %}                                            ; If not high enough
        {% set z_safe = max_z - act_z %}                    ; Set Z lift distance to maximum
    {% endif %}                                             ; End if Z is high enough
    PAUSE_BASE                                              ; Call original macro
    G91                                                     ; Relative positioning
    {% if printer.extruder.can_extrude|lower == 'true' %}   ; If extruder can extrude
        G1 E-{e} F2100                                      ; Retract filament
      {% else %}                                            ; If extruder can't extrude
        {action_respond_info("Extruder not hot enough")}    ; Display message on terminal
    {% endif %}                                             ; End if extruder can extrude
    {% if "xyz" in printer.toolhead.homed_axes %}           ; If printer is homed
        G1 Z{z_safe}                                        ; Lift Z
        G90                                                 ; Absolute positioning
        G1 X{x} Y{y} F4000                                  ; Move to X Y
      {% else %}                                            ; If printer is not homed
        {action_respond_info("Printer not homed")}          ; Display message on terminal
    {% endif %}                                             ; End if printer is homed



#.................................................................................................................
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    {% if printer["gcode_macro _WAIT_Variable"].waiting %}          ; If waiting for user input
        WAIT_Quit                                                   ; Quit waiting
      {% else %}                                                    ; If not waiting for user input
        {% set EXTRUDER_TEMP = printer["gcode_macro _PRINT_VARIABLES"].extruder_temp|int %} ; Get extruder temperature
        {% set e = params.E|default(1) %}                           ; Edit to your retract length
        {% if 'VELOCITY' in params|upper %}                         ; If VELOCITY is set in the macro call
            {% set get_params = ('VELOCITY=' + params.VELOCITY)  %} ; set get_params to the VELOCITY value
          {%else %}                                                 ; If VELOCITY is not set in the macro call
            {% set get_params = "" %}                               ; Set get_params to nothing
        {% endif %}                                                 ; End if VELOCITY is set in the macro call
        G91                                                         ; Relative positioning
        {% if printer.extruder.can_extrude|lower == 'true' %}       ; If extruder can extrude
            G1 E{e} F2100                                           ; Retract filament
          {% else %}                                                ; If extruder cannot extrude
            M117 Bringing nozzle to {EXTRUDER_TEMP}C.               ; Display message on LCD screen
            M109 S{EXTRUDER_TEMP}                                   ; Wait for nozzle to reach temperature
            G1 E{e} F21                                             ; Retract filament
        {% endif %}                                                 ; End if extruder can extrude
        RESUME_BASE {get_params}                                    ; Call original macro
    {% endif %}                                                     ; End if waiting for user input
